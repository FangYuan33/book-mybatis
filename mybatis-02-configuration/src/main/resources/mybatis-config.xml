<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--    配置的属性，用${name}取值-->
    <properties resource="jdbc.properties" />

    <settings>
        <setting name="logImpl" value="LOG4J"/>
<!--        开启二级缓存，默认值就是开启状态-->
        <setting name="cacheEnabled" value="true"/>
    </settings>

<!--    别名-->
    <typeAliases>
        <typeAlias type="entity.Department" alias="Department"/>
        <typeAlias type="entity.User" alias="User"/>
<!--        指定这个后，它会扫描该目录下的所有子目录，之后会把目录中的类全都指定别名，也可根据Alias注解自行配置-->
        <package name="entity"/>
    </typeAliases>

    <typeHandlers>
        <typeHandler handler="typeHandler.DepartmentTypeHandler" javaType="entity.Department" jdbcType="VARCHAR"/>
    </typeHandlers>
    
    <objectFactory type="ExtendObjectFactory"/>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="mapper/DepartmentMapper.xml"/>
        <mapper resource="mapper/UserMapper.xml"/>
        <mapper resource="mapper/DeptMapper.xml"/>
<!--        在 MyBatis 全局配置文件中配置 mapper 时，如果使用包扫描的方式，扫描 Mapper 接口时，-->
<!--        需要 Mapper 接口与对应的 mapper.xml 放在同一个目录下，-->
<!--        且 Mapper 接口的名称要与 mapper.xml 的名称一致。这个约定的底层原理，是 Mapper 接口包扫描时，-->
<!--        会自动寻找同目录下的同名称的 mapper.xml 文件并加载解析-->
<!--        <package name="dao"/>-->
    </mappers>
</configuration>