<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserDao">
    <cache/>
    <resultMap id="userMap" type="entity.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="birthday" column="birthday"/>
        <association property="department" javaType="entity.Department">
            <id property="id" column="department_id"/>
            <result property="name" column="department_name"/>
        </association>
    </resultMap>
    <resultMap id="lazyUserMap" type="entity.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="birthday" column="birthday"/>
        <association property="department" javaType="entity.Department"
            select="dao.DepartmentDao.findById" column="department_id"/>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        select u.*, td.id, td.name as department_name
        from tbl_user u
        left join tbl_department td
        on u.department_id = td.id
    </select>

    <select id="lazyFindAll" resultMap="lazyUserMap">
        select * from tbl_user;
    </select>

    <select id="findUserByDepartmentId" resultType="entity.User">
        select * from tbl_user where department_id = #{departmentId};
    </select>

    <select id="cleanCathe" resultType="int" flushCache="true">
        select count(tbl_user.id) from tbl_user;
    </select>

    <select id="getUserByNameOrAge" resultType="entity.User">
        select * from tbl_user
        <trim prefix="where" prefixOverrides="and">
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </trim>
    </select>

    <select id="testChooseWhenOtherwise" resultType="entity.User">
        select * from tbl_user
        <choose>
            <when test="id != null and id != ''">
                where tbl_user.id = #{id};
            </when>
            <when test="name != null and name != ''">
                where tbl_user.name = #{name};
            </when>
            <otherwise>
                where tbl_user.age = #{age};
            </otherwise>
        </choose>
    </select>

    <select id="testForeach" resultType="entity.User">
        select * from tbl_user
        where tbl_user.age in
        <foreach collection="ages" open="(" close=")" separator="," item="age">
            #{age}
        </foreach>
    </select>

    <select id="testBind" resultType="entity.User">
        <bind name="idLike" value="'%' + _parameter.id"/>
        select * from tbl_user
        where tbl_user.id like #{idLike};
    </select>

    <update id="testSet" parameterType="entity.User">
        update tbl_user
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
        </set>
        where id = #{id};
    </update>
</mapper>